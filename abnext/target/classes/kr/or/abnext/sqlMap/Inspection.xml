<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="inspection">
	<select id="getNextKey" resultType="java.lang.String">
		SELECT AUTO_INCREMENT
		  FROM INFORMATION_SCHEMA.TABLES
		 WHERE TABLE_SCHEMA = 'avinext'
		   AND TABLE_NAME = 'TB_RCEPT'
	</select>

	<select id="getPdlNo" resultType="java.lang.String">
		SELECT SUBSTR(MAX(PDL_NO),6)+1
		  FROM TB_RCEPT
		 WHERE PDL_NO LIKE CONCAT(#{pdlNo},'%')
	</select>

	<select id="selectDoctorList" parameterType="kr.or.abnext.domain.TbUser" resultType="kr.or.abnext.domain.TbUser">
		SELECT *
		  FROM TB_USER
		 WHERE HOSP_NO = CASE WHEN (SELECT HOSP_NO FROM TB_USER WHERE USER_ID = #{userId}) = '' THEN (SELECT HOSP_NO FROM TB_HOSPITAL ORDER BY HOSP_NO LIMIT 1) ELSE (SELECT HOSP_NO FROM TB_USER WHERE USER_ID = #{userId}) END
	</select>

	<select id="selectSpeciesList" resultType="kr.or.abnext.domain.TbCode">
		SELECT *
		  FROM TB_CODE
		 WHERE CODE_ID LIKE 'C001%'
		   AND CODE_LEVEL = '4'
	</select>

	<select id="selectMediHistList" resultType="kr.or.abnext.domain.TbCode">
		SELECT *
		  FROM TB_CODE
		 WHERE CODE_ID LIKE 'MH001%'
		   AND CODE_LEVEL = '3'
	</select>

	<select id="selectInspTypeList" resultType="kr.or.abnext.domain.TbCode">
		SELECT A.*
		     , CONCAT(CONCAT(CONCAT(CONCAT(CODE_NM,' > '),(SELECT CODE_NM FROM TB_CODE WHERE CODE_ID = A.UPP_CODE_ID)),' > '),(SELECT CODE_NM FROM TB_CODE T WHERE T.CODE_ID = (SELECT UPP_CODE_ID FROM TB_CODE WHERE CODE_ID = A.UPP_CODE_ID))) CODE_NM_GROUP
		  FROM TB_CODE A
		 WHERE CODE_ID LIKE 'B001%'
		   AND CODE_LEVEL = '4'
	</select>

	<select id="selectDoctorListByHosp" parameterType="kr.or.abnext.domain.TbHospital" resultType="kr.or.abnext.domain.TbUser">
		SELECT *
		  FROM TB_USER
		 WHERE HOSP_NO = #{hospNo}
	</select>

	<insert id="insertRcept" parameterType="kr.or.abnext.domain.TbRcept">
		INSERT
		  INTO TB_RCEPT
		     (
		       RQST_NO       , HOSP_NO        , HOSP_NM
		     , USER_NO       , USER_NM        , ANIM_NO        , ANIM_NM
		     , DOC_NO        , DOC_NM
		     , ANIM_BUTLER   , BUTLER_SIDO    , BUTLER_SIGUNGU , BUTLER_SIGUNGU_CD
		     , ANIM_FIRST_CD , ANIM_SECOND_CD , ANIM_THIRD_CD  , INSPECTION
		     , ANIM_BIRTH    , ANIM_SEX       , RQST_DT        , RQST_MEMO
		     , PROC_STAT     , PROC_STAT_NM
		     , PAY_GB        , PRICE          , PAY_STAT
		     , INS_DT        , INS_ID         , PDL_NO
		     )
		VALUES
		     (
		       #{rqstNo}       , #{hospNo}        , #{hospNm}
		     , #{userNo}       , #{userNm}        , #{animNo}        , #{animNm}
		     , #{docNo}        , #{docNm}
		     , #{animButler}   , #{butlerSido}    , #{butlerSigungu} , #{butlerSigunguCd}
		     , #{animFirstCd}  , #{animSecondCd}  , #{animThirdCd}   , #{inspection}
		     , #{animBirth}    , #{animSex}       , DATE_FORMAT(NOW(),'%Y.%m.%d') , #{rqstMemo}
		     , #{procStat}     , #{procStatNm}
		     , #{payGb}        , #{price}         , #{payStat}
		     , NOW()           , #{insId}         , #{pdlNo}
		     )
	</insert>

	<insert id="insertInspection" parameterType="kr.or.abnext.domain.TbInspection">
		INSERT
		  INTO TB_INSPECTION
		     (
		       RQST_NO       , SAMPLE_CODE    , SAMPLE_NAME   , INSP_TYPE
		     , INSP_FIRST_CD , INSP_SECOND_CD , INSP_THIRD_CD , INSP_PRICE
		     , WORKER_NO     , WORKER_NM	  , PRICE_COMMENT
		     , INS_DT        , INS_ID
		     )
		VALUES
		     (
		       #{rqstNo}      , #{sampleCode}   , #{sampleName}  , #{inspType}
		     , #{inspFirstCd} , #{inspSecondCd} , #{inspThirdCd} , #{inspPrice}
		     , #{workerNo}    , #{workerNm}		, #{priceComment}
		     , NOW()          , #{insId}
		     )
	</insert>

	<insert id="insertSample" parameterType="kr.or.abnext.domain.TbSample">
		INSERT
		  INTO TB_SAMPLE
		     (
		       RQST_NO       , SAMPLE_CODE    , SAMPLE_MEMO
		     , INS_DT        , INS_ID
		     )
		VALUES
		     (
		       #{rqstNo}      , #{sampleCode} , #{sampleMemo}
		     , NOW()          , #{insId}
		     )
	</insert>

	<insert id="insertMediHist" parameterType="kr.or.abnext.domain.TbMediHistory">
		INSERT
		  INTO TB_MEDI_HISTORY
		     (
		       RQST_NO       , HIST_CODE    , HIST_MEMO
		     , INS_DT        , INS_ID
		     )
		VALUES
		     (
		       #{rqstNo}     , #{histCode}  , #{histMemo}
		     , NOW()         , #{insId}
		     )
	</insert>

	<select id="selectRceptList" parameterType="kr.or.abnext.domain.TbRcept" resultType="kr.or.abnext.domain.TbRcept">
		SELECT RQST_NO, HOSP_NO, HOSP_NM, USER_NO
		     , USER_NM, ANIM_NO, ANIM_NM, FARM_NO
		     , FARM_NM, DOC_NO, DOC_NM, ANIM_BUTLER
		     , BUTLER_SIDO, BUTLER_SIGUNGU, BUTLER_SIGUNGU_CD
		     , ANIM_BIRTH, ANIM_FIRST_CD, ANIM_SECOND_CD, ANIM_THIRD_CD
		     , ANIM_SEX, RQST_DT, PROC_STAT
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.PROC_STAT) AS PROC_STAT_NM
		     , RQST_MEMO, PAY_GB, PRICE, PAY_STAT
		     , PAYED_DT, RESULT, RESULT_WRITER, FINISH_DT
		     , DIAG_UP_CD, DIAG_CD
		     , (SELECT USER_NM FROM TB_USER B WHERE B.USER_ID = A.RESULT_WRITER) AS RESULT_WRITER_NM
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.DIAG_CD) AS DIAG_CD_NM
		     , CONVERT(FINAL_MEMO USING UTF8) AS FINAL_MEMO
		     , (SELECT CODE_NM FROM TB_CODE WHERE CODE_ID = (SELECT INSP_SECOND_CD FROM TB_INSPECTION B WHERE A.RQST_NO = B.RQST_NO LIMIT 1)) AS INSP_TYPE
		     , PDL_NO
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = 'C001') AS JONG
		  FROM TB_RCEPT A
		 WHERE PROC_STAT IN
		<foreach item="arr" collection="array" open="(" separator="," close=")">
        	#{arr}
  		</foreach>
  		 ORDER BY INS_DT DESC
	</select>

	<select id="customerInspectList" parameterType="kr.or.abnext.domain.TbRcept" resultType="kr.or.abnext.domain.TbRcept">
		SELECT RQST_NO, HOSP_NO, HOSP_NM, USER_NO
		     , USER_NM, ANIM_NO, ANIM_NM, FARM_NO
		     , FARM_NM, DOC_NO, DOC_NM, ANIM_BUTLER
		     , BUTLER_SIDO, BUTLER_SIGUNGU, BUTLER_SIGUNGU_CD
		     , ANIM_BIRTH, ANIM_FIRST_CD, ANIM_SECOND_CD, ANIM_THIRD_CD
		     , ANIM_SEX, RQST_DT, PROC_STAT
			 , CASE WHEN PROC_STAT = 'A001-05' THEN '검사완료'
			        WHEN PROC_STAT = 'A001-02' THEN '접수완료'
			        WHEN PROC_STAT = 'A001-09' THEN '접수취소'
			        ELSE '검사중'
			   END AS PROC_STAT_NM
		     , RQST_MEMO, PAY_GB, PRICE, PAY_STAT
		     , PAYED_DT, RESULT, RESULT_WRITER, FINISH_DT
		     , DIAG_UP_CD, DIAG_CD
		     , (SELECT USER_NM FROM TB_USER B WHERE B.USER_ID = A.RESULT_WRITER) AS RESULT_WRITER_NM
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.DIAG_CD) AS DIAG_CD_NM
		     , CONVERT(FINAL_MEMO USING UTF8) AS FINAL_MEMO
		     , PDL_NO
		  FROM TB_RCEPT A
		 WHERE INS_ID = #{insId}
		<if test="searchStr != null and searchStr == '01'">
		   AND PROC_STAT != 'A001-05'
		</if>
		<if test="searchStr != null and searchStr == '02'">
			AND PROC_STAT = 'A001-05'
		</if>
		 ORDER BY INS_DT DESC
	</select>

	<select id="selectInspList" parameterType="kr.or.abnext.domain.TbInspection" resultType="kr.or.abnext.domain.TbInspection">
		SELECT A.*
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.INSP_FIRST_CD) AS INSP_FIRST_NM
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.INSP_SECOND_CD) AS INSP_SECOND_NM
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.INSP_THIRD_CD) AS INSP_THIRD_NM
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.INSP_TYPE) AS INSP_TYPE_NM
		  FROM TB_INSPECTION A
		 WHERE RQST_NO = #{rqstNo}
	</select>

	<select id="selectHospitalList" parameterType="kr.or.abnext.domain.TbHospital" resultType="kr.or.abnext.domain.TbHospital">
		SELECT A.*
		  FROM TB_HOSPITAL A
		 WHERE 1=1
		<if test="hospNo != null and hospNo != ''">
		   AND HOSP_NO = #{hospNo}
		</if>
		 ORDER BY HOSP_NO
	</select>

	<select id="selectInspFileList" parameterType="kr.or.abnext.domain.TbInspection" resultType="kr.or.abnext.domain.TbFile">
		SELECT *
		  FROM TB_FILE
		 WHERE 1=1
		   AND RQST_NO = #{rqstNo}
		   AND INSP_NO = #{inspNo}
	</select>

	<select id="selectSampleList" parameterType="kr.or.abnext.domain.TbSample" resultType="kr.or.abnext.domain.TbSample">
		SELECT A.*
		     , IFNULL((SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.SAMPLE_CODE),SAMPLE_MEMO) AS SAMPLE_NAME
		  FROM TB_SAMPLE A
		 WHERE RQST_NO = #{rqstNo}
	</select>

	<select id="mediHistList" parameterType="kr.or.abnext.domain.TbMediHistory" resultType="kr.or.abnext.domain.TbMediHistory">
		SELECT *
		  FROM TB_MEDI_HISTORY
		 WHERE RQST_NO = #{rqstNo}
	</select>

	<select id="getTbRcept" parameterType="kr.or.abnext.domain.TbRcept" resultType="kr.or.abnext.domain.TbRcept">
		SELECT RQST_NO, HOSP_NO, HOSP_NM, USER_NO
		     , USER_NM, ANIM_NO, ANIM_NM, FARM_NO
		     , FARM_NM, DOC_NO, DOC_NM, ANIM_BUTLER
		     , BUTLER_SIDO, BUTLER_SIGUNGU, BUTLER_SIGUNGU_CD
		     , ANIM_BIRTH, ANIM_FIRST_CD, ANIM_SECOND_CD, ANIM_THIRD_CD
		     , ANIM_SEX, RQST_DT, PROC_STAT
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.PROC_STAT) AS PROC_STAT_NM
		     , RQST_MEMO, PAY_GB, PRICE, PAY_STAT
		     , PAYED_DT, RESULT, RESULT_WRITER, FINISH_DT
		     , DIAG_UP_CD, DIAG_CD
		     , (SELECT USER_NM FROM TB_USER B WHERE B.USER_ID = A.RESULT_WRITER) AS RESULT_WRITER_NM
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.DIAG_CD) AS DIAG_CD_NM
		     , CONVERT(FINAL_MEMO USING UTF8) AS FINAL_MEMO
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.ANIM_FIRST_CD) AS ANIM_FIRST_NM
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.ANIM_SECOND_CD) AS ANIM_SECOND_NM
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.ANIM_THIRD_CD) AS ANIM_THIRD_NM
		     , CASE WHEN ANIM_SEX = 'M' THEN '수컷' WHEN ANIM_SEX = 'F' THEN '암컷' ELSE '모름' END ANIM_SEX_NM
		     , PDL_NO , INSPECTION
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = 'C001') AS JONG
		  FROM TB_RCEPT A
		 WHERE 1=1
		<if test="rqstNo != null and rqstNo != ''">
		   AND RQST_NO = #{rqstNo}
		</if>
		<if test="pdlNo != null and pdlNo != ''">
		   AND PDL_NO = #{pdlNo}
		</if>
	</select>

	<select id="getUser" parameterType="kr.or.abnext.domain.TbUser" resultType="kr.or.abnext.domain.TbUser">
		SELECT *
		  FROM TB_USER
		 WHERE USER_NO = #{userNo}
	</select>

	<select id="getAnimal" parameterType="kr.or.abnext.domain.TbAnimal" resultType="kr.or.abnext.domain.TbAnimal">
		SELECT *
		  FROM TB_ANIMAL
		 WHERE ANIM_NM = #{animNm}
		   AND ANIM_BIRTH = #{animBirth}
		   AND USER_NM = #{userNm}
		   AND SIGUNGU_CD = #{sigunguCd}
		 LIMIT 1
	</select>

	<select id="duplAnimChk" parameterType="kr.or.abnext.domain.TbAnimal" resultType="int">
		SELECT COUNT(*)
		  FROM TB_ANIMAL
		 WHERE ANIM_NM = #{animNm}
		   AND ANIM_BIRTH = #{animBirth}
		   AND USER_NM = #{userNm}
		   AND SIGUNGU_CD = #{sigunguCd}
	</select>

	<insert id="insertAnimal" parameterType="kr.or.abnext.domain.TbAnimal">
		INSERT
		  INTO TB_ANIMAL
		     (
		       ANIM_NO       , ANIM_NM
		     , ANIM_FIRST_CD , ANIM_SECOND_CD , ANIM_THIRD_CD
		     , ANIM_BIRTH    , ANIM_SEX       , MEMO
		     , USER_NM       , SIGUNGU_CD
		     , INS_DT        , INS_ID
		     )
		VALUES
		     (
		       #{animNo}      , #{animNm}
		     , #{animFirstCd} , #{animSecondCd} , #{animThirdCd}
		     , #{animBirth}   , #{animSex}      , #{memo}
		     , #{userNm}      , #{sigunguCd}
		     , NOW()          , #{insId}
		     )
	</insert>

	<update id="updateInspectStatus" parameterType="kr.or.abnext.domain.TbRcept">
		UPDATE TB_RCEPT
		   SET PROC_STAT = #{procStat}
		     , UPT_ID = #{uptId}
		     , UPT_DT = NOW()
		<if test="animNo != null and animNo != ''">
		     , ANIM_NO = #{animNo}
		</if>
		<if test="result != null and result != ''">
		     , RESULT = #{result}
		</if>
		<if test="finalMemo != null and finalMemo != ''">
		     , FINAL_MEMO = #{finalMemo}
		     , FINISH_DT = DATE_FORMAT(NOW(),'%Y.%m.%d')
   		     , RESULT_WRITER = #{uptId}
		</if>
		<if test="diagUpCd != null and diagUpCd != ''">
		     , DIAG_UP_CD = #{diagUpCd}
		</if>
		<if test="diagCd != null and diagCd != ''">
		     , DIAG_CD = #{diagCd}
		</if>
		<if test="price != null and price != ''">
		     , PRICE = #{price}
		</if>
		 WHERE RQST_NO = #{rqstNo}
	</update>

	<update id="updateSampleStatus" parameterType="kr.or.abnext.domain.TbSample">
		UPDATE TB_SAMPLE
		   SET SAMPLE_STATUS = #{sampleStatus}
		     , UPT_ID = #{uptId}
		     , UPT_DT = NOW()
		 WHERE SAMPLE_NO = #{sampleNo}
	</update>

	<update id="updateInspect" parameterType="kr.or.abnext.domain.TbInspection">
		UPDATE TB_INSPECTION
		   SET UPT_ID = #{uptId}
		     , UPT_DT = NOW()
		<if test="inspType != null and inspType != ''">
		     , INSP_TYPE = #{inspType}
		</if>
		<if test="inspFirstCd != null and inspFirstCd != ''">
		     , INSP_FIRST_CD = #{inspFirstCd}
		</if>
		<if test="inspSecondCd != null and inspSecondCd != ''">
		     , INSP_SECOND_CD = #{inspSecondCd}
		</if>
		<if test="inspThirdCd != null and inspThirdCd != ''">
		     , INSP_THIRD_CD = #{inspThirdCd}
		</if>
		<if test="sampleCode != null and sampleCode != ''">
		     , SAMPLE_CODE = #{sampleCode}
		</if>
		<if test="sampleName != null and sampleName != ''">
		     , SAMPLE_NAME = #{sampleName}
		</if>
		<if test="workerNo != null and workerNo != ''">
		     , WORKER_NO = #{workerNo}
		</if>
		<if test="workerNm != null and workerNm != ''">
		     , WORKER_NM = #{workerNm}
		</if>
		<if test="inspResult != null and inspResult != ''">
		     , INSP_RESULT = #{inspResult}
		</if>
		<if test="inspPrice != null and inspPrice != ''">
		     , INSP_PRICE = #{inspPrice}
		</if>
		<if test="priceComment != null and priceComment != ''">
		     , PRICE_COMMENT = #{priceComment}
		</if>
		 WHERE INSP_NO = #{inspNo}
	</update>

	<select id="selectPaymentList" parameterType="kr.or.abnext.domain.TbRcept" resultType="kr.or.abnext.domain.TbRcept">
		SELECT A.*
		     , CASE WHEN PAY_STAT = '01' THEN 0 ELSE PRICE END PAYED_PRICE
		     , B.PRICE_COMMENT
		  FROM TB_RCEPT A
		  LEFT OUTER JOIN TB_INSPECTION B
		    ON (A.RQST_NO = B.RQST_NO)
		 WHERE 1=1
  		<if test ="searchStrtDt != null and searchStrtDt != ''">
  		   AND RQST_DT BETWEEN #{searchStrtDt} AND #{searchFnshDt}
  		</if>
  		<if test ="searchStr != null and searchStr != ''">
		   AND HOSP_NM LIKE CONCAT(CONCAT('%',#{searchStr}),'%')
  		</if>
  		<if test ="payGb != null and payGb != ''">
		   AND PAY_GB = #{payGb}
  		</if>
  		<if test ="insId != null and insId != ''">
		   AND INS_ID = #{insId}
  		</if>
  		<if test ="hospNo != null and hospNo != ''">
		   AND HOSP_NO = #{hospNo}
  		</if>
  		 ORDER BY INS_DT DESC
  		<if test="limitCnt != null and limitCnt != ''">
  		 LIMIT #{limitCnt}
  		</if>
	</select>

	<select id="selectInspect" parameterType="kr.or.abnext.domain.TbInspection" resultType="kr.or.abnext.domain.TbInspection">
		SELECT COUNT(*) AS SUM_CNT
		     , SUM(INSP_PRICE) AS INSP_PRICE
		     , (SELECT MAX(PAY_STAT) FROM TB_RCEPT B WHERE RQST_NO = B.RQST_NO AND PDL_NO = #{rqstNo}) AS PAY_STAT
		  FROM TB_INSPECTION
		 WHERE RQST_NO = (SELECT RQST_NO FROM TB_RCEPT WHERE PDL_NO = #{rqstNo})
	</select>

	<update id="modifyPayment" parameterType="kr.or.abnext.domain.TbRcept">
		UPDATE TB_RCEPT
		   SET UPT_ID = #{uptId}
		     , UPT_DT = NOW()
		     , PAY_STAT = '02'
		 WHERE PDL_NO = #{pdlNo}
		   AND PAY_STAT = '01'
	</update>

	<insert id="insertOpinion" parameterType="kr.or.abnext.domain.TbInspOpinion">
		INSERT
		  INTO TB_INSP_OPINION
		     (
		       INSP_NO         , INSP_SICK_CD
		     , OPIN_COMMENT
		     , INS_DT          , INS_ID
		     )
		VALUES
		     (
		       #{inspNo}       , #{inspSickCd}
		     , #{opinComment}
		     , NOW()           , #{insId}
		     )
	</insert>

	<insert id="updateResult" parameterType="kr.or.abnext.domain.TbRcept">
		UPDATE TB_RCEPT
		   SET UPT_ID       = #{uptId}
		     , UPT_DT       = NOW()
		     , PROC_STAT    = #{procStat}
		     , PROC_STAT_NM = #{procStatNm}
		 WHERE RQST_NO = (SELECT RQST_NO FROM TB_INSPECTION WHERE INSP_NO = #{inspNo} LIMIT 1)
	</insert>

	<select id="getFileList" parameterType="kr.or.abnext.domain.TbFile" resultType="kr.or.abnext.domain.TbFile">
		SELECT A.*
		     , B.INSP_RESULT
		  FROM TB_INSPECTION B
		  LEFT OUTER JOIN TB_FILE A
		    ON B.INSP_NO = A.INSP_NO
		 WHERE B.INSP_NO = #{inspNo}
		<if test="fileGb != null and fileGb != ''">
		   AND A.FILE_GB = #{fileGb}
		</if>
		<if test="closeYn != null and closeYn != ''">
		   AND (A.CLOSE_YN is null OR A.CLOSE_YN = #{closeYn})
		</if>
	</select>

	<select id="getInspResult" parameterType="kr.or.abnext.domain.TbInspection" resultType="kr.or.abnext.domain.TbInspection">
		SELECT A.*
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.INSP_FIRST_CD) AS INSP_FIRST_NM
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.INSP_SECOND_CD) AS INSP_SECOND_NM
		     , (SELECT CODE_NM FROM TB_CODE B WHERE B.CODE_ID = A.INSP_THIRD_CD) AS INSP_THIRD_NM
		  FROM TB_INSPECTION A
		 WHERE INSP_NO = #{inspNo}
	</select>

	<insert id="insertAntibiotic" parameterType="kr.or.abnext.domain.TbAntibiotic">
		INSERT
		  INTO TB_ANTIBIOTIC (
		       INSP_NO     , ANTI_NO     , ANTI_NAME
		     , CAPACITY    , NICK_NAME
		     , MINI        , SCOPE       , MAXI
		     , RES1        , RES2        , ANTI_MEMO
		     , INS_DT      , INS_ID )
		VALUES (
		       #{inspNo}   , #{antiNo}   , #{antiName}
		     , #{capacity} , #{nickName}
		     , #{mini}     , #{scope}    , #{maxi}
		     , #{res1}     , #{res2}     , #{antiMemo}
		     , NOW()       , #{insId} )
		    ON DUPLICATE KEY
		UPDATE ANTI_NAME = #{antiName}
		     , CAPACITY = #{capacity}
		     , NICK_NAME = #{nickName}
		     , MINI = #{mini}
		     , SCOPE = #{scope}
		     , MAXI = #{maxi}
		     , RES1 = #{res1}
		     , RES2 = #{res2}
		     , ANTI_MEMO = #{antiMemo}
		     , UPT_DT = NOW()
		     , UPT_ID = #{insId}
	</insert>

	<select id="getAntiList" parameterType="kr.or.abnext.domain.TbAntibiotic" resultType="kr.or.abnext.domain.TbAntibiotic">
		SELECT A.*
		     , B.INSP_RESULT
		  FROM TB_INSPECTION B
		  LEFT OUTER JOIN TB_ANTIBIOTIC A
		    ON B.INSP_NO = A.INSP_NO
		 WHERE B.INSP_NO = #{inspNo}
		 ORDER BY CAST(ANTI_NO AS UNSIGNED)
	</select>

	<insert id="insertSerum" parameterType="kr.or.abnext.domain.TbSerum">
		INSERT
		  INTO TB_SERUM (
		       INSP_NO , SER_NAME , SER_DATA
		     , INS_DT  , INS_ID )
		VALUES (
		       #{inspNo} , #{serName} , #{serData}
		     , NOW()     , #{insId} )
		    ON DUPLICATE KEY
		UPDATE SER_DATA = #{serData}
		     , UPT_DT = NOW()
		     , UPT_ID = #{insId}
	</insert>

	<select id="getSerumList" parameterType="kr.or.abnext.domain.TbSerum" resultType="kr.or.abnext.domain.TbSerum">
		SELECT A.*
		     , B.INSP_RESULT
		  FROM TB_INSPECTION B
		  LEFT OUTER JOIN TB_SERUM A
		    ON B.INSP_NO = A.INSP_NO
		 WHERE B.INSP_NO = #{inspNo}
		 ORDER BY A.SER_NAME
	</select>

	<select id="getSerumChart" parameterType="kr.or.abnext.domain.TbSerum" resultType="kr.or.abnext.domain.TbSerum">
		SELECT SER_DATA
		     , COUNT(*) AS CNT
		  FROM TB_SERUM
		 WHERE INSP_NO =  #{inspNo}
		 GROUP BY SER_DATA
	</select>

	<insert id="insertPcr" parameterType="kr.or.abnext.domain.TbPcr">
		INSERT
		  INTO TB_PCR (
		       INSP_NO  , SMPL_NAME
		     , POSITIVE , NEGATIVE
		     , RESULT   , MEMO
		     , INS_DT   , INS_ID )
		VALUES (
		       #{inspNo}   , #{smplName}
		     , #{positive} , #{negative}
		     , #{result}   , #{memo}
		     , NOW()       , #{insId} )
		    ON DUPLICATE KEY
		UPDATE RESULT = #{result}
		     , POSITIVE = #{positive}
		     , NEGATIVE = #{negative}
		     , MEMO = #{memo}
		     , UPT_DT = NOW()
		     , UPT_ID = #{insId}
	</insert>

	<insert id="deletePcr" parameterType="String">
		DELETE
		  FROM TB_PCR
		 WHERE INSP_NO = #{inspNo}
	</insert>

	<select id="getPcrList" parameterType="kr.or.abnext.domain.TbPcr" resultType="kr.or.abnext.domain.TbPcr">
		SELECT A.*
		     , B.INSP_RESULT
		  FROM TB_INSPECTION B
		  LEFT OUTER JOIN TB_PCR A
		    ON B.INSP_NO = A.INSP_NO
		 WHERE B.INSP_NO = #{inspNo}
		 ORDER BY A.SMPL_NAME
	</select>

	<insert id="insertBloodChem" parameterType="kr.or.abnext.domain.TbBloodChem">
		INSERT
		  INTO TB_BLOOD_CHEM (
		       INSP_NO , ITEM_NAME , VAL
		     , RMK     , INS_DT    , INS_ID )
		VALUES (
		       #{inspNo} , #{itemName} , #{val}
		     , #{rmk}    , NOW()       , #{insId} )
		    ON DUPLICATE KEY
		UPDATE VAL = #{val}
		     , RMK = #{rmk}
		     , UPT_DT = NOW()
		     , UPT_ID = #{insId}
	</insert>

	<select id="getBcList" parameterType="kr.or.abnext.domain.TbBloodChem" resultType="kr.or.abnext.domain.TbBloodChem">
		SELECT A.*
		     , B.INSP_RESULT
		  FROM TB_INSPECTION B
		  LEFT OUTER JOIN TB_BLOOD_CHEM A
		    ON B.INSP_NO = A.INSP_NO
		  LEFT OUTER JOIN TB_CODE C
		    ON A.ITEM_NAME = C.CODE_NM
		 WHERE B.INSP_NO = #{inspNo}
		 ORDER BY C.SORT_IDX
	</select>

	<insert id="insertCbc" parameterType="kr.or.abnext.domain.TbBloodChem">
		INSERT
		  INTO TB_CBC (
		       INSP_NO , ITEM_NAME , VAL
		     , RMK     , INS_DT    , INS_ID )
		VALUES (
		       #{inspNo} , #{itemName} , #{val}
		     , #{rmk}    , NOW()       , #{insId} )
		    ON DUPLICATE KEY
		UPDATE VAL = #{val}
		     , RMK = #{rmk}
		     , UPT_DT = NOW()
		     , UPT_ID = #{insId}
	</insert>

	<select id="getCbcList" parameterType="kr.or.abnext.domain.TbBloodChem" resultType="kr.or.abnext.domain.TbBloodChem">
		SELECT A.*
		     , B.INSP_RESULT
		  FROM TB_INSPECTION B
		  LEFT OUTER JOIN TB_CBC A
		    ON B.INSP_NO = A.INSP_NO
		 WHERE B.INSP_NO = #{inspNo}
		 ORDER BY INS_DT
	</select>

	<select id="getAnimCode" parameterType="kr.or.abnext.domain.TbAnimal" resultType="String">
		SELECT CONCAT('XYZ',CAST(MAX(SUBSTR(ANIM_NO,4)) AS SIGNED)+1)
		  FROM TB_ANIMAL
		 WHERE ANIM_NO LIKE CONCAT(#{animNo},'%')
	</select>

	<select id="dupChkInspect" parameterType="kr.or.abnext.domain.TbRcept" resultType="int">
		SELECT COUNT(*)
		  FROM TB_RCEPT
		 WHERE HOSP_NO = #{hospNo}
		   AND ANIM_NM = #{animNm}
		   AND RQST_DT = DATE_FORMAT(NOW(),'%Y.%m.%d')
	</select>

	<update id="cencelRcept" parameterType="String">
		UPDATE TB_RCEPT
		   SET PROC_STAT = 'A001-09'
		   	   , PROC_STAT_NM = '접수취소'
		   	   , UPT_DT = NOW()
		 WEHRE PDL_NO = #{pdlNo}
	</update>

	<update id="updateFile" parameterType="kr.or.abnext.domain.TbFile">
		UPDATE TB_FILE
		   SET TITLE = #{title}
		   	 , CONTENT = #{content}
		   	 , CLOSE_YN =  #{closeYn}
		 WHERE FILE_NO = #{fileNo}
	</update>
</mapper>